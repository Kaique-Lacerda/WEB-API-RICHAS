{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport api from \"../api\";\nexport function pegaRepositorioDoUsuario(id) {\n  var resultado, _t;\n  return _regeneratorRuntime.async(function (_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 1;\n        return _regeneratorRuntime.awrap(api.get(\"/repos?postId=\" + id));\n      case 1:\n        resultado = _context.sent;\n        return _context.abrupt(\"return\", resultado.data);\n      case 2:\n        _context.prev = 2;\n        _t = _context[\"catch\"](0);\n        console.log(_t);\n        return _context.abrupt(\"return\", []);\n      case 3:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, [[0, 2]], Promise);\n}\nexport function salvarRepositoriosDoUsuario(postId, nome, data, id) {\n  var _t2;\n  return _regeneratorRuntime.async(function (_context2) {\n    while (1) switch (_context2.prev = _context2.next) {\n      case 0:\n        _context2.prev = 0;\n        _context2.next = 1;\n        return _regeneratorRuntime.awrap(api.post(\"/repos/\" + id, {\n          name: nome,\n          data: data,\n          postId: postId\n        }));\n      case 1:\n        _context2.next = 3;\n        break;\n      case 2:\n        _context2.prev = 2;\n        _t2 = _context2[\"catch\"](0);\n        console.log(\"O erro é: \" + _t2);\n        return _context2.abrupt(\"return\", 'erro');\n      case 3:\n      case \"end\":\n        return _context2.stop();\n    }\n  }, null, null, [[0, 2]], Promise);\n}","map":{"version":3,"names":["api","pegaRepositorioDoUsuario","id","resultado","_t","_regeneratorRuntime","async","_context","prev","next","awrap","get","sent","abrupt","data","console","log","stop","Promise","salvarRepositoriosDoUsuario","postId","nome","_t2","_context2","post","name"],"sources":["/workspaces/WEB-API-RICHAS/src/servicos/requisicoes/repositorios.js"],"sourcesContent":["import api from \"../api\";\n\nexport async function pegaRepositorioDoUsuario(id) {\n     try{\n        const resultado =  await api.get(`/repos?postId=${id}`);\n        return resultado.data\n    }\n    catch (error){\n        console.log(error)\n        return []\n    }\n    \n}\n\nexport async function salvarRepositoriosDoUsuario(postId, nome, data, id) {\n    try{\n        await api.post(`/repos/${id}`, \n            {\n            name: nome,\n            data: data,\n            postId: postId\n            }\n        );\n    }catch (error){\n        console.log(\"O erro é: \"+error)\n        return 'erro'\n    }\n}"],"mappings":";AAAA,OAAOA,GAAG;AAEV,OAAO,SAAeC,wBAAwBA,CAACC,EAAE;EAAA,IAAAC,SAAA,EAAAC,EAAA;EAAA,OAAAC,mBAAA,CAAAC,KAAA,WAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAE,IAAA;QAAA,OAAAJ,mBAAA,CAAAK,KAAA,CAEhBV,GAAG,CAACW,GAAG,oBAAkBT,EAAI,CAAC;MAAA;QAAjDC,SAAS,GAAAI,QAAA,CAAAK,IAAA;QAAA,OAAAL,QAAA,CAAAM,MAAA,WACRV,SAAS,CAACW,IAAI;MAAA;QAAAP,QAAA,CAAAC,IAAA;QAAAJ,EAAA,GAAAG,QAAA;QAGrBQ,OAAO,CAACC,GAAG,CAAAZ,EAAM,CAAC;QAAA,OAAAG,QAAA,CAAAM,MAAA,WACX,EAAE;MAAA;MAAA;QAAA,OAAAN,QAAA,CAAAU,IAAA;IAAA;EAAA,yBAAAC,OAAA;AAAA;AAKjB,OAAO,SAAeC,2BAA2BA,CAACC,MAAM,EAAEC,IAAI,EAAEP,IAAI,EAAEZ,EAAE;EAAA,IAAAoB,GAAA;EAAA,OAAAjB,mBAAA,CAAAC,KAAA,WAAAiB,SAAA;IAAA,kBAAAA,SAAA,CAAAf,IAAA,GAAAe,SAAA,CAAAd,IAAA;MAAA;QAAAc,SAAA,CAAAf,IAAA;QAAAe,SAAA,CAAAd,IAAA;QAAA,OAAAJ,mBAAA,CAAAK,KAAA,CAE1DV,GAAG,CAACwB,IAAI,aAAWtB,EAAE,EACvB;UACAuB,IAAI,EAAEJ,IAAI;UACVP,IAAI,EAAEA,IAAI;UACVM,MAAM,EAAEA;QACR,CACJ,CAAC;MAAA;QAAAG,SAAA,CAAAd,IAAA;QAAA;MAAA;QAAAc,SAAA,CAAAf,IAAA;QAAAc,GAAA,GAAAC,SAAA;QAEDR,OAAO,CAACC,GAAG,CAAC,YAAY,GAAAM,GAAM,CAAC;QAAA,OAAAC,SAAA,CAAAV,MAAA,WACxB,MAAM;MAAA;MAAA;QAAA,OAAAU,SAAA,CAAAN,IAAA;IAAA;EAAA,yBAAAC,OAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}